services:
  client:
    build:
      context: ./packages/client
      args:
        PORT_CLIENT: ${PORT_CLIENT}
    container_name: explorator-client
    depends_on:
      - server
    environment:
      HOST_SERVER: ${HOST_SERVER}
      PORT_CLIENT: ${PORT_CLIENT}
    ports:
      - ${PORT_CLIENT}:${PORT_CLIENT}
    restart: unless-stopped

  database:
    build:
      args:
        DATABASE_ENV: ${DATABASE_ENV}
      context: ./db
    command: ["-c", "log_statement=all", "-p", "${PORT_DATABASE}"]
    container_name: explorator-database
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-h",
          "${HOST_DATABASE}",
          "-p",
          "${PORT_DATABASE}",
          "-U",
          "${DATABASE_USER}",
        ]
      interval: 15s
      timeout: 5s
      retries: 10
    ports:
      - ${PORT_DATABASE}:${PORT_DATABASE}
    restart: unless-stopped
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d

  gateway:
    build:
      context: ./packages/gateway
      args:
        HOST_CLIENT: ${HOST_CLIENT}
        HOST_SERVER: ${HOST_SERVER}
    container_name: explorator-gateway
    depends_on:
      - server
      - client
    ports:
      - ${PORT_GATEWAY}:80
    restart: unless-stopped

  migrations:
    command: ["--wait", "up"]
    container_name: explorator-migrations
    depends_on:
      - database
    environment:
      DATABASE_URL: ${DATABASE_URL}
    image: ghcr.io/amacneil/dbmate
    volumes:
      - ./db:/db

  server:
    build:
      context: ./packages/server
    container_name: explorator-server
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT_SERVER: ${PORT_SERVER}
    ports:
      - ${PORT_SERVER}:${PORT_SERVER}
    restart: unless-stopped
